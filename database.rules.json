{
  "rules": {
    ".read": "true",
    "songs": {
      "$song_key": {
        ".validate": "newData.hasChildren(['name']) && $song_key.matches(/^[a-z_]+$/)",
        "name": {
          ".validate": "newData.isString()"
        },
        "teams": {
          "$key1": {
            ".validate": "newData.parent().parent().parent().parent().child('teams').child('hasChild')($key1) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "lives": {
          "$key2": {
            ".validate": "newData.parent().parent().parent().parent().child('lives').child('hasChild')($key2) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "characters": {
      "$character_key": {
        ".validate": "newData.hasChildren(['name']) && $character_key.matches(/^[a-z_]+$/)",
        "name": {
          ".validate": "newData.isString()"
        },
        "teams": {
          "$key1": {
            ".validate": "newData.parent().parent().parent().parent().child('teams').child('hasChild')($key1) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "teams": {
      "$team_key": {
        ".validate": "newData.hasChildren(['name']) && $team_key.matches(/^[a-z_]+$/)",
        "name": {
          ".validate": "newData.isString()"
        },
        "members": {
          "$key3": {
            ".validate": "newData.parent().parent().parent().parent().child('characters').child('hasChild')($key3) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "songs": {
          "$key4": {
            ".validate": "newData.parent().parent().parent().parent().child('songs').child('hasChild')($key4) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "mds": {
          "$key5": {
            ".validate": "newData.parent().parent().parent().parent().child('mds').child('hasChild')($key5) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "mds": {
      "$md_key": {
        ".validate": "newData.hasChildren(['name', 'team']) && $md_key.matches(/^[a-z_]+$/)",
        "name": {
          ".validate": "newData.isString()"
        },
        "team": {
          ".validate": "newData.isString() && newData.parent().parent().parent().child('teams').child('hasChild')(newData)"
        },
        "Lives": {
          "$key2": {
            ".validate": "newData.parent().parent().parent().parent().child('lives').child('hasChild')($key2) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "series": {
      "$series_key": {
        ".validate": "newData.hasChildren(['start_at', 'end_at']) && $series_key.matches(/^[a-z_]+$/)",
        "start_at": {
          ".validate": "newData.isString() && newData.val().matches(/^(19|20)[0-9][0-9][-\\/. ](0[1-9]|1[012])[-\\/. ](0[1-9]|[12][0-9]|3[01])$/)"
        },
        "end_at": {
          ".validate": "newData.isString() && newData.val().matches(/^(19|20)[0-9][0-9][-\\/. ](0[1-9]|1[012])[-\\/. ](0[1-9]|[12][0-9]|3[01])$/)"
        },
        "episodes": {
          "$key6": {
            ".validate": "$key6.matches(/^[0-9]+$/) && newData.isString() && newData.parent().parent().parent().parent().child('episodes').child('hasChild')(newData)"
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "episodes": {
      "$episode_key": {
        ".validate": "newData.hasChildren(['number', 'series', 'title']) && $episode_key.matches(/^[a-z_]+$/)",
        "number": {
          ".validate": "newData.isNumber()"
        },
        "series": {
          ".validate": "newData.isString() && newData.parent().parent().parent().child('series').child('hasChild')(newData)"
        },
        "title": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "brands": {
      "$brand_key": {
        ".validate": "newData.hasChildren(['name']) && $brand_key.matches(/^[a-z_]+$/)",
        "name": {
          ".validate": "newData.isString()"
        },
        "coordinates": {
          "$key7": {
            ".validate": "newData.parent().parent().parent().parent().child('coordinates').child('hasChild')($key7) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "coordinates": {
      "$coordinate_key": {
        ".validate": "newData.hasChildren(['name', 'brand', 'Character']) && $coordinate_key.matches(/^[a-z_]+$/)",
        "name": {
          ".validate": "newData.isString()"
        },
        "brand": {
          ".validate": "newData.isString() && newData.parent().parent().parent().child('brands').child('hasChild')(newData)"
        },
        "Character": {
          ".validate": "newData.isString() && newData.parent().parent().parent().child('characters').child('hasChild')(newData)"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "lives": {
      "$live_key": {
        ".validate": "newData.hasChildren(['md', 'episode', 'song', 'team']) && $live_key.matches(/^[a-z_]+$/)",
        "md": {
          ".validate": "newData.isString()"
        },
        "coordinates": {
          "$key7": {
            ".validate": "newData.parent().parent().parent().parent().child('coordinates').child('hasChild')($key7) && newData.isBoolean() && newData.val() == true"
          },
          ".validate": "newData.hasChildren()"
        },
        "episode": {
          ".validate": "newData.isString() && newData.parent().parent().parent().child('episodes').child('hasChild')(newData)"
        },
        "song": {
          ".validate": "newData.isString() && newData.parent().parent().parent().child('songs').child('hasChild')(newData)"
        },
        "team": {
          ".validate": "newData.isString() && newData.parent().parent().parent().child('teams').child('hasChild')(newData)"
        },
        "$other": {
          ".validate": "false"
        }
      }
    }
  }
}
